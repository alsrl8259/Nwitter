{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNweDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.145bfb31.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_BATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n      const {\r\n        target: { name, value },\r\n      } = event;\r\n      if (name === \"email\") {\r\n        setEmail(value);\r\n      } else if (name === \"password\") {\r\n        setPassword(value);\r\n      }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }else{\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n      <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            className = \"authInput\"\r\n          />\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={onChange}\r\n            className = \"authInput\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            className = \"authInput authSubmit\"\r\n            value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          />\r\n          {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n          {newAccount ? \"Log in\" : \"Create Account\"}\r\n        </span>\r\n      </>\r\n    );\r\n}\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth =  () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n      <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faTwitter}\r\n          color={\"#04AAFF\"}\r\n          size=\"3x\"\r\n          style={{ marginBottom: 30 }}\r\n        />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n          <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n            Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n            Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentURL).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) =>{\r\n      event.preventDefault();\r\n      await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n        text: newNweet,\r\n      });\r\n      setEditing(false);\r\n    }\r\n    const onChange = (event) =>{\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n      <div className=\"nweet\">\r\n        {editing ? (\r\n          <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Edit your Nweet\"\r\n                value={newNweet}\r\n                required\r\n                autoFocus\r\n                onChange={onChange}\r\n                className=\"formInput\"\r\n              />\r\n              <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n            </form>\r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n              Cancel\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentURL && <img src={nweetObj.attachmentURL} />}\r\n            {isOwner && (\r\n              <div className=\"nweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    // if (nweet === \"\") {\r\n    //     return;\r\n    //   }\r\n    event.preventDefault();\r\n    let attachmentURL = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentURL = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentURL,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n const Home = ({ userObj }) => {\r\n   const [nweets, setNweets] = useState([]);\r\n   useEffect(() => {\r\n     dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n       const nweetArray = snapshot.docs.map((doc) => ({\r\n         id: doc.id,\r\n         ...doc.data(),\r\n       }));\r\n       setNweets(nweetArray);\r\n     });\r\n   }, []);\r\n   return (\r\n    <div className=\"container\">\r\n       <NweetFactory userObj={userObj} />\r\n       <div style={{ marginTop: 30 }}>\r\n         {nweets.map((nweet) => (\r\n           <Nweet\r\n             key={nweet.id}\r\n             nweetObj={nweet}\r\n             isOwner={nweet.creatorId === userObj.uid}\r\n           />\r\n         ))}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n export default Home;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile =  ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNweDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName){\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }\n      else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Intializing...\"\n      )}\n      <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}