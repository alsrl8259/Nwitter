[{"C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\index.js":"1","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\components\\App.js":"2","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\routes\\Auth.js":"4","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\routes\\Home.js":"5","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\fbase.js":"6","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\components\\Nweet.js":"9"},{"size":206,"mtime":1609945120721,"results":"10","hashOfConfig":"11"},{"size":1099,"mtime":1610130845189,"results":"12","hashOfConfig":"11"},{"size":976,"mtime":1610130216769,"results":"13","hashOfConfig":"11"},{"size":2608,"mtime":1610126597047,"results":"14","hashOfConfig":"11"},{"size":2688,"mtime":1610127270183,"results":"15","hashOfConfig":"11"},{"size":742,"mtime":1610110054350,"results":"16","hashOfConfig":"11"},{"size":331,"mtime":1610128198938,"results":"17","hashOfConfig":"11"},{"size":1103,"mtime":1610129470650,"results":"18","hashOfConfig":"11"},{"size":2055,"mtime":1610112196661,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1at78dv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\index.js",[],["42","43"],"C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\components\\App.js",[],"C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\components\\Router.js",["44"],"C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\routes\\Auth.js",[],"C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\routes\\Home.js",["45"],"import Nweet from \"components/Nweet\";\r\nimport { dbService, storagService } from \"fbase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n const Home = ({ userObj }) => {\r\n   const [nweet, setNweet] = useState(\"\");\r\n   const [nweets, setNweets] = useState([]);\r\n   const [attachment, setAttachment] = useState();\r\n   useEffect(() => {\r\n     dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n       const nweetArray = snapshot.docs.map((doc) => ({\r\n         id: doc.id,\r\n         ...doc.data(),\r\n       }));\r\n       setNweets(nweetArray);\r\n     });\r\n   }, []);\r\n   const onSubmit = async (event) => {\r\n     event.preventDefault();\r\n     let attachmentURL = \"\";\r\n     if(attachment!==\"\"){\r\n        const attachmentRef = storagService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentURL = await response.ref.getDownloadURL();\r\n     }\r\n     const nweetObj = {\r\n       text: nweet,\r\n       createdAt: Date.now(),\r\n       creatorId: userObj.uid,\r\n       attachmentURL,\r\n     };\r\n     await dbService.collection(\"nweets\").add(nweetObj);\r\n     setNweet(\"\");\r\n     setAttachment(\"\");\r\n   };\r\n   const onChange = (event) => {\r\n     const {\r\n       target: { value },\r\n     } = event;\r\n     setNweet(value);\r\n   };\r\n   const onFileChange = (event) => {\r\n      const {\r\n        target: { files },\r\n      } = event;\r\n      const theFile = files[0];\r\n      const reader = new FileReader();\r\n      reader.onloadend = (finishedEvent) =>{\r\n          const {\r\n            currentTarget: { result },\r\n          } = finishedEvent;\r\n          setAttachment(result)\r\n      }\r\n      reader.readAsDataURL(theFile);\r\n   }\r\n   const onClearAttachment = () => setAttachment(null);\r\n   return (\r\n     <div>\r\n       <form onSubmit={onSubmit}>\r\n         <input\r\n           value={nweet}\r\n           onChange={onChange}\r\n           type=\"text\"\r\n           placeholder=\"What's on your mind?\"\r\n           maxLength={120}\r\n         />\r\n         <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n         <input type=\"submit\" value=\"Nweet\" />\r\n         {attachment && (\r\n           <div>\r\n             <img src={attachment} width=\"50px\" height=\"50px\" />\r\n             <button onClick={onClearAttachment}>Clear</button>\r\n           </div>\r\n         )}\r\n       </form>\r\n       <div>\r\n         {nweets.map((nweet) => (\r\n           <Nweet\r\n             key={nweet.id}\r\n             nweetObj={nweet}\r\n             isOwner={nweet.creatorId === userObj.uid}\r\n           />\r\n         ))}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n export default Home;","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\fbase.js",[],"C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\routes\\Profile.js",["46"],"import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNweDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName){\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" placeholder=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\wjdal\\Documents\\React\\nwitter\\src\\components\\Nweet.js",["47"],"import { dbService, storagService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storagService.refFromURL(nweetObj.attachmentURL).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) =>{\r\n      event.preventDefault();\r\n      await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n        text: newNweet,\r\n      });\r\n      setEditing(false);\r\n    }\r\n    const onChange = (event) =>{\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n      <div>\r\n        {editing ? (\r\n          <>\r\n            {isOwner && (\r\n              <>\r\n                <form onSubmit={onSubmit}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Edit your Nweet\"\r\n                    value={newNweet}\r\n                    required\r\n                    onChange={onChange}\r\n                  />\r\n                  <input type=\"submit\" value=\"Update Nweet\" />\r\n                </form>\r\n                <button onClick={toggleEditing}>Cancel</button>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentURL && (\r\n              <img src={nweetObj.attachmentURL} width=\"50px\" height=\"50px\" />\r\n            )}\r\n            {isOwner && (\r\n              <>\r\n                <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                <button onClick={toggleEditing}>Edit Nweet</button>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":74,"column":14,"nodeType":"58","endLine":74,"endColumn":65},{"ruleId":"59","severity":1,"message":"60","line":5,"column":1,"nodeType":"61","endLine":41,"endColumn":3},{"ruleId":"56","severity":1,"message":"57","line":52,"column":15,"nodeType":"58","endLine":52,"endColumn":78},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]